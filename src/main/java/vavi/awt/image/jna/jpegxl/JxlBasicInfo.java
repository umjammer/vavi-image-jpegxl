package vavi.awt.image.jna.jpegxl;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : jxl/codestream_header.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class JxlBasicInfo extends Structure {
	public int have_container;
	public int xsize;
	public int ysize;
	public int bits_per_sample;
	public int exponent_bits_per_sample;
	public float intensity_target;
	public float min_nits;
	public int relative_to_max_display;
	public float linear_below;
	public int uses_original_profile;
	public int have_preview;
	public int have_animation;
	/**
	 * @see Library.JxlOrientation
	 * C type : JxlOrientation
	 */
	public int orientation;
	public int num_color_channels;
	public int num_extra_channels;
	public int alpha_bits;
	public int alpha_exponent_bits;
	public int alpha_premultiplied;
	/** C type : JxlPreviewHeader */
	public JxlPreviewHeader preview;
	/** C type : JxlAnimationHeader */
	public JxlAnimationHeader animation;
	/** C type : uint8_t[108] */
	public byte[] padding = new byte[108];
	public JxlBasicInfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("have_container", "xsize", "ysize", "bits_per_sample", "exponent_bits_per_sample", "intensity_target", "min_nits", "relative_to_max_display", "linear_below", "uses_original_profile", "have_preview", "have_animation", "orientation", "num_color_channels", "num_extra_channels", "alpha_bits", "alpha_exponent_bits", "alpha_premultiplied", "preview", "animation", "padding");
	}
	public JxlBasicInfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends JxlBasicInfo implements Structure.ByReference {
	}
	public static class ByValue extends JxlBasicInfo implements Structure.ByValue {
	}

	@Override
	public String toString() {
		return "JxlBasicInfo{" +
				"have_container=" + have_container +
				", xsize=" + xsize +
				", ysize=" + ysize +
				", bits_per_sample=" + bits_per_sample +
				", exponent_bits_per_sample=" + exponent_bits_per_sample +
				", intensity_target=" + intensity_target +
				", min_nits=" + min_nits +
				", relative_to_max_display=" + relative_to_max_display +
				", linear_below=" + linear_below +
				", uses_original_profile=" + uses_original_profile +
				", have_preview=" + have_preview +
				", have_animation=" + have_animation +
				", orientation=" + orientation +
				", num_color_channels=" + num_color_channels +
				", num_extra_channels=" + num_extra_channels +
				", alpha_bits=" + alpha_bits +
				", alpha_exponent_bits=" + alpha_exponent_bits +
				", alpha_premultiplied=" + alpha_premultiplied +
				", preview=" + preview +
				", animation=" + animation +
				", padding=" + Arrays.toString(padding) +
				'}';
	}
}
