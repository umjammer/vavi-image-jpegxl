package vavi.awt.image.jna.jpegxl.encode;
import com.sun.jna.Callback;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.NativeLongByReference;

import java.util.Arrays;
import java.util.List;
/**
 * The JxlEncoderOutputProcessor structure provides an interface for the<br>
 * encoder's output processing. Users of the library, who want to do streaming<br>
 * encoding, should implement the required callbacks for buffering, writing,<br>
 * seeking (if supported), and setting a finalized position during the encoding<br>
 * process.<br>
 * At a high level, the processor can be in one of two states:<br>
 * - With an active buffer: This indicates that a buffer has been acquired using<br>
 *   `get_buffer` and encoded data can be written to it.<br>
 * - Without an active buffer: In this state, no data can be written. A new<br>
 * buffer must be acquired after releasing any previously active buffer.<br>
 * The library will not acquire more than one buffer at a given time.<br>
 * The state of the processor includes `position` and `finalized position`,<br>
 * which have the following meaning.<br>
 * - position: Represents the current position, in bytes, within the output<br>
 * stream where the encoded data will be written next. This position moves<br>
 * forward with each `release_buffer` call as data is written, and can also be<br>
 * adjusted through the optional seek callback, if provided. At this position<br>
 * the next write will occur.<br>
 * - finalized position:  A position in the output stream that ensures all bytes<br>
 * before this point are finalized and won't be changed by later writes.<br>
 * All fields but `seek` are required, `seek` is optional and can be NULL.<br>
 * <i>native declaration : jxl/encode.h:678</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class JxlEncoderOutputProcessor extends Structure {
	/** C type : void* */
	public Pointer opaque;
	/** C type : get_buffer_callback* */
	public JxlEncoderOutputProcessor.get_buffer_callback get_buffer;
	/** C type : release_buffer_callback* */
	public vavi.awt.image.jna.jpegxl.encode.JxlChunkedFrameInputSource.release_buffer_callback release_buffer;
	/** C type : seek_callback* */
	public JxlEncoderOutputProcessor.seek_callback seek;
	/** C type : set_finalized_position_callback* */
	public JxlEncoderOutputProcessor.set_finalized_position_callback set_finalized_position;
	/** <i>native declaration : jxl/encode.h</i> */
	public interface get_buffer_callback extends Callback {
		Pointer apply(Pointer opaque, NativeLongByReference size);
	};
	/** <i>native declaration : jxl/encode.h</i> */
	public interface release_buffer_callback extends Callback {
		void apply(Pointer opaque, NativeLong written_bytes);
	};
	/** <i>native declaration : jxl/encode.h</i> */
	public interface seek_callback extends Callback {
		void apply(Pointer opaque, long position);
	};
	/** <i>native declaration : jxl/encode.h</i> */
	public interface set_finalized_position_callback extends Callback {
		void apply(Pointer opaque, long finalized_position);
	};
	public JxlEncoderOutputProcessor() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("opaque", "get_buffer", "release_buffer", "seek", "set_finalized_position");
	}
	/**
	 * @param opaque C type : void*<br>
	 * @param get_buffer C type : get_buffer_callback*<br>
	 * @param release_buffer C type : release_buffer_callback*<br>
	 * @param seek C type : seek_callback*<br>
	 * @param set_finalized_position C type : set_finalized_position_callback*
	 */
	public JxlEncoderOutputProcessor(Pointer opaque, JxlEncoderOutputProcessor.get_buffer_callback get_buffer, vavi.awt.image.jna.jpegxl.encode.JxlChunkedFrameInputSource.release_buffer_callback release_buffer, JxlEncoderOutputProcessor.seek_callback seek, JxlEncoderOutputProcessor.set_finalized_position_callback set_finalized_position) {
		super();
		this.opaque = opaque;
		this.get_buffer = get_buffer;
		this.release_buffer = release_buffer;
		this.seek = seek;
		this.set_finalized_position = set_finalized_position;
	}
	public JxlEncoderOutputProcessor(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends JxlEncoderOutputProcessor implements Structure.ByReference {
		
	};
	public static class ByValue extends JxlEncoderOutputProcessor implements Structure.ByValue {
		
	};
}
