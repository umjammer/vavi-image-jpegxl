package vavi.awt.image.jna.jpegxl;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : jxl/codestream_header.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class JxlExtraChannelInfo extends Structure {
	/**
	 * @see Library.JxlExtraChannelType
	 * C type : JxlExtraChannelType
	 */
	public int type;
	public int bits_per_sample;
	public int exponent_bits_per_sample;
	public int dim_shift;
	public int name_length;
	public int alpha_premultiplied;
	/** C type : float[4] */
	public float[] spot_color = new float[4];
	public int cfa_channel;
	public JxlExtraChannelInfo() {
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("type", "bits_per_sample", "exponent_bits_per_sample", "dim_shift", "name_length", "alpha_premultiplied", "spot_color", "cfa_channel");
	}
	/**
	 * @param type @see JxlExtraChannelType<br>
	 * C type : JxlExtraChannelType<br>
	 * @param spot_color C type : float[4]
	 */
	public JxlExtraChannelInfo(int type, int bits_per_sample, int exponent_bits_per_sample, int dim_shift, int name_length, int alpha_premultiplied, float spot_color[], int cfa_channel) {
		this.type = type;
		this.bits_per_sample = bits_per_sample;
		this.exponent_bits_per_sample = exponent_bits_per_sample;
		this.dim_shift = dim_shift;
		this.name_length = name_length;
		this.alpha_premultiplied = alpha_premultiplied;
		if ((spot_color.length != this.spot_color.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.spot_color = spot_color;
		this.cfa_channel = cfa_channel;
	}
	public JxlExtraChannelInfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends JxlExtraChannelInfo implements Structure.ByReference {
	}
	public static class ByValue extends JxlExtraChannelInfo implements Structure.ByValue {
	}
}
